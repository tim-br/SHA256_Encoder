<!-- Ant build file generated by tIDE. To be used as template for automated build (continuous integration).
     Usage: Call "ant jar" to compile and create the jar.
     Note: this file is automatically generated DO NOT EDIT
         This file will be overridden at each project export
         if it contains the string "generated by tIDE". 
 -->


<project name="SHA256_Encoding" default="jar">


 <splash imageurl="build.png"/> 

<!-- ================ PATHS ================ -->

<property name="src" location="/home/timothy/javaprojects/SHA256_Encoding/src"/>
<property name="lib" location="./lib"/>
<property name="classes" location="./classes"/>  
<property name="build" location="./pub"/>  
<property name="docs" location="./docs"/>  
<property name="test" location="./tests"/>  
<property name="jutest" location="./tests/junit"/>

<path id="project.class.path">
</path>

<!-- ================================ -->
<!-- =========== COMPILE ============ -->
<!-- ================================ -->
<target name="compile" description="compile project">
  <mkdir dir="${classes}"/>
  <javac srcdir="${src}"
      executable="/usr/lib/jvm/java-8-oracle/bin/javac"
      failonerror="false"
      updatedProperty="compiled"
      fork="true"
      destdir="${classes}"
      debug="on"
      source="1.6">
    <classpath refid="project.class.path"/>
    <include name="**/*.java"/>
  </javac>
</target>

<!-- ============================ -->
<!-- =========== JAR ============ -->
<!-- ============================ -->
<target name="jar" description="create jarfile" depends="compile">
  <echo message="SHA256_Encoding.jar IS NOT SIGNED"/>
  <mkdir dir="${build}"/>
  <jar destfile="${build}/SHA256_Encoding.jar">
    <fileset dir="${classes}" excludes="**/Thumbs.db"/>
    <fileset dir="${src}" excludes="**/*.java"/>
    <manifest>
      <attribute name="Main-Class" value=""/>
    </manifest>
  </jar>
</target>

<!-- ======================================================================= -->
<!-- =========== Execute (good practice: call some apps tests ) ============ -->
<!-- ======================================================================= -->
<target name="execute" description="run the application with -build_test argument" depends="compile">
 <java classname="">
   <arg value="-build_test"/>
   <classpath refid="project.class.path"/>
   <classpath path="${classes}"/>
 </java>
</target>

<!-- ========================================================================================== -->
<!-- =========== JUnit checks WITHOUT COVERAGE (you must copy junit.jar to ant/lib ============ -->
<!-- ========================================================================================== -->
<target name="junit" description="run all junit checks on _Test and AllTest named classes" depends="compile">
 <echo message="JUnit tests for all _Test and AllTests classes"/>
 <mkdir dir="${jutest}"/>
 <mkdir dir="${test}"/>
 <junit printsummary="yes" haltonfailure="no" fork="true">
 <classpath>
  <pathelement location="${classes}"/>
  <pathelement path="${toString:project.class.path}"/>
 </classpath>
 <formatter type="xml"/>
 <batchtest fork="yes" todir="${jutest}">
  <fileset dir="${src}">
    <include name="**/*_Test*.java"/>
    <exclude name="**/AllTests.java"/>
  </fileset>
 </batchtest>
 </junit>
 <echo message="JUnit done. now performing junitreport"/>
 <junitreport todir="${jutest}">
  <fileset dir="${jutest}">
    <include name="*.xml"/>
  </fileset>
  <report format="frames" todir="${test}/junit/report/html"/>
 </junitreport>
</target>

</project>